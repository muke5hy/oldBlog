<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Learning the hard way!</title><link href="http://www.mukeshyadav.com/" rel="alternate"></link><link href="http://www.mukeshyadav.com/feeds/tag/mongodb.atom.xml" rel="self"></link><id>http://www.mukeshyadav.com/</id><updated>2016-03-28T00:00:00+02:00</updated><entry><title>Optimization of Mongo query, making cursor iteration fast.</title><link href="http://www.mukeshyadav.com/optimization-of-mongo-query-making-ursor-iteration-fast.html" rel="alternate"></link><updated>2016-03-28T00:00:00+02:00</updated><author><name>Mukesh</name></author><id>tag:www.mukeshyadav.com,2015-11-20:optimization-of-mongo-query-making-ursor-iteration-fast.html</id><summary type="html">&lt;p&gt;If you using a mongo, I'm sure you must have come across a situation where you want to do a iteration for .find() command in mongo. 
Querying a Mongo collection for few records will give you faster results, but if you data is more than than 20K-30K or millions and you want to do iteration over it its hell lot of time. &lt;/p&gt;
&lt;p&gt;Lets take an example say you have 1 Million records in your users collection and about 98% users a active, to get the result you will do 
  active_users = db.users.find({active:True})
Your above query will get the cursor, now here comes the problem. Mongo does not fetches records in above query it just gets the cursor. To get all the records you need iterate over it. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;temp = []
for user in active_users:
    if user.get(&amp;#39;first_name&amp;#39;):
        temp.append(user.get(&amp;#39;first_name&amp;#39;))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above query will take about 12+ or around that to create temp list. 12 sec is too huge number for such an small task. (The seconds will differ depending on size of the documents you have in users collection)&lt;/p&gt;
&lt;p&gt;Under the hood pymongo in this case is not getting all the records at once in fact it does not gets the results when you do .find() query. Once you start iterating it fetches data from Mongodb in batches. &lt;/p&gt;
&lt;p&gt;By default it has 4MB of document size, Maximum of 16MB data mongo can fetch from DB. &lt;/p&gt;
&lt;p&gt;to optimize our query we can do &lt;/p&gt;
&lt;p&gt;active_users = db.users.find({active:True}).batch_size(2000)&lt;/p&gt;
&lt;p&gt;Now again iterate over the active_users and see the magic happen.&lt;/p&gt;</summary><category term="mongodb"></category><category term="query Optimization"></category></entry><entry><title>Formating String date to ISOdate or Object Date in MongoDB</title><link href="http://www.mukeshyadav.com/formating-string-date-to-isodate-or-object-date-in-mongodb.html" rel="alternate"></link><updated>2016-03-28T00:00:00+02:00</updated><author><name>Mukesh</name></author><id>tag:www.mukeshyadav.com,2015-11-05:formating-string-date-to-isodate-or-object-date-in-mongodb.html</id><summary type="html">&lt;p&gt;MongoDB stores the date in ISODate format which is nothing but a wrapper for the Date object of Javascript. If some how your database has stored to string date, you can convert them to ISO by running following query directly in mongo terminal&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;date_updated&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;$type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}})&lt;/span&gt;    
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date_updated&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date_updated&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ISODate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date_updated&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="mongodb"></category></entry><entry><title>Updating data in query with forEach</title><link href="http://www.mukeshyadav.com/updating-data-in-query-with-forEach.html" rel="alternate"></link><updated>2016-03-28T00:00:00+02:00</updated><author><name>Mukesh</name></author><id>tag:www.mukeshyadav.com,2015-11-04:updating-data-in-query-with-forEach.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;    Updating data in query with forEach
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Since No-SQL does not have a structure or columns fixed when we store data into it, its very common or easy we insert unwanted keys into MongoDB. 
While developing some of the project I faced this issue as well. &lt;/p&gt;
&lt;p&gt;To resolve such situation we can manually update each document, if the task is very small we might just write one update query and remove the key or replace the value. The problem with this is if there is conditional update we might have to write separate query and update it. &lt;/p&gt;
&lt;p&gt;Since MongoDB uses V8 Javascript Engine we can use Javascript Language to write conditional queries. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;unit&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;unit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expiry_date&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="nx"&gt;unit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expired&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;unit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above code is self explanatory. Bottom line is if we want to edit in forEach we should create complete document and save it. &lt;/p&gt;</summary><category term="mongodb"></category></entry></feed>